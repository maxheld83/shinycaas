% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/azure.R
\name{az_webapp_config}
\alias{az_webapp_config}
\alias{az_webapp_shiny_opts}
\title{Deploy a shiny app to \href{https://azure.microsoft.com/en-us/services/app-service/containers/}{Microsoft Azure Web Apps for Containers}}
\usage{
az_webapp_config(
  name,
  deployment_container_image_name,
  startup_file = NULL,
  plan,
  resource_group,
  subscription,
  docker_registry_server_url = NULL,
  docker_registry_server_user = NULL,
  docker_registry_server_password = NULL
)

az_webapp_shiny_opts()
}
\arguments{
\item{name}{Name of the web app.}

\item{deployment_container_image_name}{The custom image name and optionally the tag name.
Image must
\itemize{
\item include everything needed to run the shiny app, including shiny itself,
but \emph{does not} need to include shiny server or other software to route, load balance and serve shiny,
\item include an \code{ENTRYPOINT} and/or \href{https://docs.docker.com/engine/reference/builder/#cmd}{\code{CMD}} instruction to start shiny automatically (recommended), \emph{or} shiny must be started via the \code{startup_file} argument.
}}

\item{startup_file}{\verb{docker run} \href{https://docs.docker.com/engine/reference/run/}{\verb{[COMMAND]}} to use inside of your custom image \code{deployment_container_image_name}.
Defaults to \code{NULL}, in which case the container is expected to start up shiny automatically (recommended).
For details on the shiny startup command, see the examples.

\strong{The \verb{[EXPR]} (anything after \code{-e}) must not be quoted, and must not contain spaces (\href{https://github.com/subugoe/shinycaas/issues/27}{#27})}.
For example, the following \code{startup-file}s are valid (if nonsensical, because they don't start a shiny app)
\itemize{
\item \code{"Rscript -e 1+1"} (no spaces)
\item \code{"Rscript -e print('foo')"} (no spaces, no quoting \emph{of} the \verb{[EXPR]})
}

The following \code{startup-file}s are \emph{invalid}:
\itemize{
\item \code{"Rscript -e 1 + 1"} (spaces inside \verb{[EXPR]})
\item \code{"Rscript -e '1+1'"} (quoting of \verb{[EXPR]} would be treated as \verb{"Rscript -e '\\"1+1\\"'"}).
}}

\item{plan}{Name or resource id of the app service plan.}

\item{resource_group}{The \href{https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/manage-resource-groups-portal}{Azure resource group} to which the shiny app should belong.}

\item{subscription}{Name or ID of the Azure subscription to which costs are billed.
According to an upvoted answer on Stack Overflow, \href{https://stackoverflow.com/questions/45661109/are-azure-subscription-id-aad-tenant-id-and-aad-app-client-id-considered-secre}{Azure subscription IDs need not be considered a secret or personal identifiable information (PII)}.
However, depending your applicable context and policies, you may want to provide this argument as a secret.}

\item{docker_registry_server_url}{The container registry server url.
Defaults to \code{NULL}, in which case the azure default, \href{http://hub.docker.com}{docker hub} is used.}

\item{docker_registry_server_user, docker_registry_server_password}{Credentials for private container registries.
Defaults to \code{NULL} for public registries.
Do not expose your credentials in public code; it's best to use secret environment variables.}
}
\description{
Wraps the \href{https://docs.microsoft.com/en-us/cli/azure/?view=azure-cli-latest}{Azure Command-Line Interface (CLI)} with defaults suitable for deploying a shiny app.
}
\section{Functions}{
\itemize{
\item \code{az_webapp_shiny_opts}: Set shiny options as \href{https://docs.microsoft.com/en-us/azure/app-service/containers/configure-custom-container}{required for an Azure Webapp}:
\itemize{
\item \verb{options(shiny.port = as.integer(Sys.getenv('PORT'))}.
Your custom container is expected to listen on \code{PORT}, an environment variable set by Azure.
If your image suggests \code{EXPOSE}d ports, that may be respected by Azure (undocumented behavior).
\item \code{options(shiny.host = "0.0.0.0")} to make your shiny application accessable to the Azure Webapp hosting environment.
}

You can also set these options manually as in the below example.
}}

\examples{
# deploy shiny app using rocker image
az_webapp_config(
  name = "hello-shiny",
  # this image actually includes *more* than necessary
  # for example, it includes shinyserver, but just shiny would suffice
  deployment_container_image_name = "rocker/shiny:4.0.2",
  # above image has no `ENTRYPOINT` and/or `CMD` to start shiny by default.
  # so this `[COMMAND]` must be appended to `docker run`
  startup_file = paste(
    "Rscript",
    # setting shiny options for azure manually
    # equivalent to running shinycaas::az_webapp_shiny_opts()
    "-e options(shiny.host='0.0.0.0',shiny.port=as.integer(Sys.getenv('PORT')))",
    # runExample does not take port option by default until
    # https://github.com/rstudio/shiny/issues/2972 is on CRAN
    "-e shiny::runExample('01_hello',port=getOption('shiny.port'))"
  ),
  # replace below with your own credentials
  plan = "hoad",
  resource_group = "hoad",
  subscription = "f0dd3a37-0a4e-4e7f-9c9b-cb9f60146edc"
)

# deploy shiny app using muggle image
# az_webapp_config(
#   name = "old-faithful",
#   deployment_container_image_name = "docker.pkg.github.com/subugoe/shinycaas/oldfaithful",
#   plan = "hoad",
#   resource_group = "hoad",
#   subscription = "f0dd3a37-0a4e-4e7f-9c9b-cb9f60146edc",
#   docker_registry_server_url = "https://docker.pkg.github.com",
#   docker_registry_server_user = "maxheld83"
# )
}

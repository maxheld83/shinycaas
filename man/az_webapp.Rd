% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/azure.R
\name{az_webapp}
\alias{az_webapp}
\alias{az_webapp_create}
\alias{az_webapp_delete}
\alias{az_webapp_list}
\alias{az_webapp_show}
\alias{az_webapp_deployment_slot_create}
\alias{az_webapp_config_container_set}
\alias{az_webapp_update}
\alias{az_webapp_config_set}
\alias{az_webapp_config_container_show}
\alias{az_webapp_config_appsettings_set}
\alias{az_webapp_restart}
\title{Manage web apps}
\usage{
az_webapp(slot = NULL, restart = TRUE, ...)

az_webapp_create(
  name = NULL,
  plan,
  resource_group = NULL,
  deployment_container_image_name,
  startup_file = NULL,
  subscription = NULL,
  ...
)

az_webapp_delete(name = NULL, slot = NULL, ...)

az_webapp_list(...)

az_webapp_show(slot = NULL, ...)

az_webapp_deployment_slot_create(name = NULL, resource_group = NULL, slot, ...)

az_webapp_config_container_set(
  deployment_container_image_name,
  docker_registry_server_url = NULL,
  docker_registry_server_user = NULL,
  docker_registry_server_password = NULL,
  slot = NULL,
  ...
)

az_webapp_update(slot = NULL, ...)

az_webapp_config_set(slot = NULL, ...)

az_webapp_config_container_show(slot = NULL, ...)

az_webapp_config_appsettings_set(slot = NULL, ...)

az_webapp_restart(slot = NULL, ...)
}
\arguments{
\item{slot}{The name of the \href{https://docs.microsoft.com/en-us/azure/app-service/deploy-staging-slots}{deployment slot}.
Defaults to the production slot if not specified.
Only available for higher app service plan tiers.}

\item{restart}{whether to restart the web app.}

\item{...}{
  Arguments passed on to \code{\link[=az_cli_run]{az_cli_run}}, \code{\link[=az_cli_run]{az_cli_run}}
  \describe{
    \item{\code{cmd}}{Command, required, optional, additional parameters, as for \code{\link[processx:run]{processx::run()}}
\code{add} parameters are reserved for the user to pass down additional arguments.}
    \item{\code{req}}{Command, required, optional, additional parameters, as for \code{\link[processx:run]{processx::run()}}
\code{add} parameters are reserved for the user to pass down additional arguments.}
    \item{\code{opt}}{Command, required, optional, additional parameters, as for \code{\link[processx:run]{processx::run()}}
\code{add} parameters are reserved for the user to pass down additional arguments.}
    \item{\code{add}}{Command, required, optional, additional parameters, as for \code{\link[processx:run]{processx::run()}}
\code{add} parameters are reserved for the user to pass down additional arguments.}
    \item{\code{echo_cmd}}{Whether to print the command to run to the screen.}
    \item{\code{echo}}{Whether to print the standard output and error
to the screen. Note that the order of the standard output and error
lines are not necessarily correct, as standard output is typically
buffered.}
  }}

\item{name}{Name of the web app.
(In the Azure CLI, this argument is sometimes known as \code{name}, and sometimes as \code{web}).}

\item{plan}{Name or resource id of the app service plan.}

\item{resource_group}{The \href{https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/manage-resource-groups-portal}{Azure resource group} to which the shiny app should belong.}

\item{deployment_container_image_name}{The custom image name and optionally the tag name.
Image must
\itemize{
\item include everything needed to run the shiny app, including shiny itself,
but \emph{does not} need to include shiny server or other software to route, load balance and serve shiny,
\item include an \code{ENTRYPOINT} and/or \href{https://docs.docker.com/engine/reference/builder/#cmd}{\code{CMD}} instruction to start shiny automatically (recommended), \emph{or} shiny must be started via the \code{startup_file} argument.
}}

\item{startup_file}{\verb{docker run} \href{https://docs.docker.com/engine/reference/run/}{\verb{[COMMAND]}} to use inside of your custom image \code{deployment_container_image_name}.
Defaults to \code{NULL}, in which case the container is expected to start up shiny automatically (recommended).
For details on the shiny startup command, see the examples.

\strong{The \verb{[EXPR]} (anything after \code{-e}) must not be quoted, and must not contain spaces (\href{https://github.com/subugoe/shinycaas/issues/27}{#27})}.
For example, the following \code{startup-file}s are valid (if nonsensical, because they don't start a shiny app)
\itemize{
\item \code{"Rscript -e 1+1"} (no spaces)
\item \code{"Rscript -e print('foo')"} (no spaces, no quoting \emph{of} the \verb{[EXPR]})
}

The following \code{startup-file}s are \emph{invalid}:
\itemize{
\item \code{"Rscript -e 1 + 1"} (spaces inside \verb{[EXPR]})
\item \code{"Rscript -e '1+1'"} (quoting of \verb{[EXPR]} would be treated as \verb{"Rscript -e '\\"1+1\\"'"}).
}}

\item{subscription}{Name or ID of the Azure subscription to which costs are billed.
According to an upvoted answer on Stack Overflow, \href{https://stackoverflow.com/questions/45661109/are-azure-subscription-id-aad-tenant-id-and-aad-app-client-id-considered-secre}{Azure subscription IDs need not be considered a secret or personal identifiable information (PII)}.
However, depending your applicable context and policies, you may want to provide this argument as a secret.

To find out which subscriptions you are currently authorised to use, run \code{print(az_account_list())}.}

\item{docker_registry_server_url}{The container registry server url.
Defaults to \code{NULL}, in which case the azure default, \href{http://hub.docker.com}{docker hub} is used.}

\item{docker_registry_server_user, docker_registry_server_password}{Credentials for private container registries.
Defaults to \code{NULL} for public registries.
Do not expose your credentials in public code; it's best to use secret environment variables.}
}
\description{
Manage web apps
}
\section{Functions}{
\itemize{
\item \code{az_webapp_create}: Create a web app

\item \code{az_webapp_delete}: Delete a web app

\item \code{az_webapp_list}: List web apps

\item \code{az_webapp_show}: Gets the details of a web app

\item \code{az_webapp_deployment_slot_create}: Create a deployment slot

\item \code{az_webapp_config_container_set}: Set a web app container's settings

\item \code{az_webapp_update}: Update a web app

\item \code{az_webapp_config_set}: Set a web app's configuration

\item \code{az_webapp_config_container_show}: Get details of a web app container's settings

\item \code{az_webapp_config_appsettings_set}: Set a web app's settings

\item \code{az_webapp_restart}: Restarts the web app
}}

\seealso{
Other azure functions: 
\code{\link{az_account}()},
\code{\link{az_cli_run}()},
\code{\link{az_configure}()},
\code{\link{az_login}()},
\code{\link{include_app2_az}()},
\code{\link{shiny_deploy_az}()},
\code{\link{shiny_opts_az}()}
}
\concept{azure functions}
